/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE VIDEO_STREAM_STATUS PACKING
package com.MAVLink.common;

import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;

/**
 * Information about the status of a video stream.
 */
public class msg_video_stream_status extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_VIDEO_STREAM_STATUS = 270;
    public static final int MAVLINK_MSG_LENGTH = 19;
    private static final long serialVersionUID = MAVLINK_MSG_ID_VIDEO_STREAM_STATUS;


    /**
     * Frame rate
     */
    public float framerate;

    /**
     * Bit rate
     */
    public long bitrate;

    /**
     * Bitmap of stream status flags
     */
    public int flags;

    /**
     * Horizontal resolution
     */
    public int resolution_h;

    /**
     * Vertical resolution
     */
    public int resolution_v;

    /**
     * Video image rotation clockwise
     */
    public int rotation;

    /**
     * Horizontal Field of view
     */
    public int hfov;

    /**
     * Video Stream ID (1 for first, 2 for second, etc.)
     */
    public short stream_id;


    /**
     * Generates the payload for a mavlink message for a message of this type
     *
     * @return
     */
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_VIDEO_STREAM_STATUS;

        packet.payload.putFloat(framerate);

        packet.payload.putUnsignedInt(bitrate);

        packet.payload.putUnsignedShort(flags);

        packet.payload.putUnsignedShort(resolution_h);

        packet.payload.putUnsignedShort(resolution_v);

        packet.payload.putUnsignedShort(rotation);

        packet.payload.putUnsignedShort(hfov);

        packet.payload.putUnsignedByte(stream_id);

        return packet;
    }

    /**
     * Decode a video_stream_status message into this class fields
     *
     * @param payload The message to decode
     */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.framerate = payload.getFloat();

        this.bitrate = payload.getUnsignedInt();

        this.flags = payload.getUnsignedShort();

        this.resolution_h = payload.getUnsignedShort();

        this.resolution_v = payload.getUnsignedShort();

        this.rotation = payload.getUnsignedShort();

        this.hfov = payload.getUnsignedShort();

        this.stream_id = payload.getUnsignedByte();

    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_video_stream_status() {
        msgid = MAVLINK_MSG_ID_VIDEO_STREAM_STATUS;
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     */
    public msg_video_stream_status(MAVLinkPacket mavLinkPacket) {
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_VIDEO_STREAM_STATUS;
        unpack(mavLinkPacket.payload);
    }


    /**
     * Returns a string with the MSG name and data
     */
    public String toString() {
        return "MAVLINK_MSG_ID_VIDEO_STREAM_STATUS - sysid:" + sysid + " compid:" + compid + " framerate:" + framerate + " bitrate:" + bitrate + " flags:" + flags + " resolution_h:" + resolution_h + " resolution_v:" + resolution_v + " rotation:" + rotation + " hfov:" + hfov + " stream_id:" + stream_id + "";
    }
}
        