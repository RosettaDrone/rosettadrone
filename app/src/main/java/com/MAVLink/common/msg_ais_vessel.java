/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE AIS_VESSEL PACKING
package com.MAVLink.common;

import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;

/**
 * The location and information of an AIS vessel
 */
public class msg_ais_vessel extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_AIS_VESSEL = 301;
    public static final int MAVLINK_MSG_LENGTH = 58;
    private static final long serialVersionUID = MAVLINK_MSG_ID_AIS_VESSEL;


    /**
     * Mobile Marine Service Identifier, 9 decimal digits
     */
    public long MMSI;

    /**
     * Latitude
     */
    public int lat;

    /**
     * Longitude
     */
    public int lon;

    /**
     * Course over ground
     */
    public int COG;

    /**
     * True heading
     */
    public int heading;

    /**
     * Speed over ground
     */
    public int velocity;

    /**
     * Distance from lat/lon location to bow
     */
    public int dimension_bow;

    /**
     * Distance from lat/lon location to stern
     */
    public int dimension_stern;

    /**
     * Time since last communication in seconds
     */
    public int tslc;

    /**
     * Bitmask to indicate various statuses including valid data fields
     */
    public int flags;

    /**
     * Turn rate
     */
    public byte turn_rate;

    /**
     * Navigational status
     */
    public short navigational_status;

    /**
     * Type of vessels
     */
    public short type;

    /**
     * Distance from lat/lon location to port side
     */
    public short dimension_port;

    /**
     * Distance from lat/lon location to starboard side
     */
    public short dimension_starboard;

    /**
     * The vessel callsign
     */
    public byte callsign[] = new byte[7];

    /**
     * The vessel name
     */
    public byte name[] = new byte[20];


    /**
     * Generates the payload for a mavlink message for a message of this type
     *
     * @return
     */
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_AIS_VESSEL;

        packet.payload.putUnsignedInt(MMSI);

        packet.payload.putInt(lat);

        packet.payload.putInt(lon);

        packet.payload.putUnsignedShort(COG);

        packet.payload.putUnsignedShort(heading);

        packet.payload.putUnsignedShort(velocity);

        packet.payload.putUnsignedShort(dimension_bow);

        packet.payload.putUnsignedShort(dimension_stern);

        packet.payload.putUnsignedShort(tslc);

        packet.payload.putUnsignedShort(flags);

        packet.payload.putByte(turn_rate);

        packet.payload.putUnsignedByte(navigational_status);

        packet.payload.putUnsignedByte(type);

        packet.payload.putUnsignedByte(dimension_port);

        packet.payload.putUnsignedByte(dimension_starboard);


        for (int i = 0; i < callsign.length; i++) {
            packet.payload.putByte(callsign[i]);
        }


        for (int i = 0; i < name.length; i++) {
            packet.payload.putByte(name[i]);
        }


        return packet;
    }

    /**
     * Decode a ais_vessel message into this class fields
     *
     * @param payload The message to decode
     */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.MMSI = payload.getUnsignedInt();

        this.lat = payload.getInt();

        this.lon = payload.getInt();

        this.COG = payload.getUnsignedShort();

        this.heading = payload.getUnsignedShort();

        this.velocity = payload.getUnsignedShort();

        this.dimension_bow = payload.getUnsignedShort();

        this.dimension_stern = payload.getUnsignedShort();

        this.tslc = payload.getUnsignedShort();

        this.flags = payload.getUnsignedShort();

        this.turn_rate = payload.getByte();

        this.navigational_status = payload.getUnsignedByte();

        this.type = payload.getUnsignedByte();

        this.dimension_port = payload.getUnsignedByte();

        this.dimension_starboard = payload.getUnsignedByte();


        for (int i = 0; i < this.callsign.length; i++) {
            this.callsign[i] = payload.getByte();
        }


        for (int i = 0; i < this.name.length; i++) {
            this.name[i] = payload.getByte();
        }


    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_ais_vessel() {
        msgid = MAVLINK_MSG_ID_AIS_VESSEL;
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     */
    public msg_ais_vessel(MAVLinkPacket mavLinkPacket) {
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_AIS_VESSEL;
        unpack(mavLinkPacket.payload);
    }


    /**
     * Sets the buffer of this message with a string, adds the necessary padding
     */
    public void setCallsign(String str) {
        int len = Math.min(str.length(), 7);
        for (int i = 0; i < len; i++) {
            callsign[i] = (byte) str.charAt(i);
        }

        for (int i = len; i < 7; i++) {            // padding for the rest of the buffer
            callsign[i] = 0;
        }
    }

    /**
     * Gets the message, formated as a string
     */
    public String getCallsign() {
        StringBuffer buf = new StringBuffer();
        for (int i = 0; i < 7; i++) {
            if (callsign[i] != 0)
                buf.append((char) callsign[i]);
            else
                break;
        }
        return buf.toString();

    }

    /**
     * Sets the buffer of this message with a string, adds the necessary padding
     */
    public void setName(String str) {
        int len = Math.min(str.length(), 20);
        for (int i = 0; i < len; i++) {
            name[i] = (byte) str.charAt(i);
        }

        for (int i = len; i < 20; i++) {            // padding for the rest of the buffer
            name[i] = 0;
        }
    }

    /**
     * Gets the message, formated as a string
     */
    public String getName() {
        StringBuffer buf = new StringBuffer();
        for (int i = 0; i < 20; i++) {
            if (name[i] != 0)
                buf.append((char) name[i]);
            else
                break;
        }
        return buf.toString();

    }

    /**
     * Returns a string with the MSG name and data
     */
    public String toString() {
        return "MAVLINK_MSG_ID_AIS_VESSEL - sysid:" + sysid + " compid:" + compid + " MMSI:" + MMSI + " lat:" + lat + " lon:" + lon + " COG:" + COG + " heading:" + heading + " velocity:" + velocity + " dimension_bow:" + dimension_bow + " dimension_stern:" + dimension_stern + " tslc:" + tslc + " flags:" + flags + " turn_rate:" + turn_rate + " navigational_status:" + navigational_status + " type:" + type + " dimension_port:" + dimension_port + " dimension_starboard:" + dimension_starboard + " callsign:" + callsign + " name:" + name + "";
    }
}
        